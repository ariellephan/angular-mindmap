{"version":3,"file":"testing.js","sources":["../../../packages/platform-server/testing/src/server.js","../../../packages/platform-server/testing/src/testing.js","../../../packages/platform-server/testing/public_api.js","../../../packages/platform-server/testing/testing.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, createPlatformFactory } from \"@angular/core\";\nimport { BrowserDynamicTestingModule, ɵplatformCoreDynamicTesting as platformCoreDynamicTesting } from \"@angular/platform-browser-dynamic/testing\";\nimport { NoopAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { ɵINTERNAL_SERVER_PLATFORM_PROVIDERS as INTERNAL_SERVER_PLATFORM_PROVIDERS, ɵSERVER_RENDER_PROVIDERS as SERVER_RENDER_PROVIDERS } from \"@angular/platform-server\";\n/**\n * Platform for testing\n *\n * \\@experimental API related to bootstrapping are still under review.\n */\nexport const /** @type {?} */ platformServerTesting = createPlatformFactory(platformCoreDynamicTesting, 'serverTesting', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n/**\n * NgModule for testing.\n *\n * \\@experimental API related to bootstrapping are still under review.\n */\nexport class ServerTestingModule {\n}\nServerTestingModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [BrowserDynamicTestingModule],\n                imports: [NoopAnimationsModule],\n                providers: SERVER_RENDER_PROVIDERS\n            },] },\n];\n/** @nocollapse */\nServerTestingModule.ctorParameters = () => [];\nfunction ServerTestingModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ServerTestingModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ServerTestingModule.ctorParameters;\n}\n//# sourceMappingURL=server.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser-dynamic/testing package.\n */\nexport { platformServerTesting, ServerTestingModule } from \"./server\";\n//# sourceMappingURL=testing.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport { platformServerTesting, ServerTestingModule } from \"./src/testing\";\n// This file only reexports content of the `src` folder. Keep it that way.\n//# sourceMappingURL=public_api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { platformServerTesting, ServerTestingModule } from \"./public_api\";\n//# sourceMappingURL=testing.js.map"],"names":["platformCoreDynamicTesting","INTERNAL_SERVER_PLATFORM_PROVIDERS","SERVER_RENDER_PROVIDERS"],"mappings":";;;;;;;;;;AAAA;;;;;;;;;;;AAWA,AAIA;;;;;AAKA,AAAO,MAAuB,qBAAqB,GAAG,qBAAqB,CAACA,2BAA0B,EAAE,eAAe,EAAEC,mCAAkC,CAAC,CAAC;;;;;;AAM7J,AAAO,MAAM,mBAAmB,CAAC;CAChC;AACD,mBAAmB,CAAC,UAAU,GAAG;IAC7B,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACb,OAAO,EAAE,CAAC,2BAA2B,CAAC;gBACtC,OAAO,EAAE,CAAC,oBAAoB,CAAC;gBAC/B,SAAS,EAAEC,wBAAuB;aACrC,EAAE,EAAE;CAChB,CAAC;;AAEF,mBAAmB,CAAC,cAAc,GAAG,MAAM,EAAE,CAAC;;ACpC9C;;;;;;;;;;;;;;;GAeG;;ACfH;;;;;;;;;;;;;;;;AAgBA,AAA2E;0EACD;;ACjB1E;;;;;;GAMG;;;;"}